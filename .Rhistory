paired_testing(country_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Subgroup-analysis: Men
gdr <- 1
gender_paired <- paired_enc %>% filter(gender_post == gdr)
paired_testing(gender_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Subgroup-analysis: Men
gdr <- 1
gender_paired <- paired_enc %>% filter(gender_post == gdr)
paired_testing(gender_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Subgroup-analysis: Men
gdr <- 2
gender_paired <- paired_enc %>% filter(gender_post == gdr)
paired_testing(gender_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# If you answered yes to adding new workers, how many new employees are female?
# Check for increase
community_reg(df=ci_enc,
col_name="workforce_change_female", dep="V1",
title="New Female Workers Change by Community",
var_type="ratio")
# If you answered yes to adding new workers, how many new employees are female?
# Check for increase
community_reg(df=ci_enc,
col_name="workforce_change_female", dep="V1",
title="New Female Workers Change by Community",
outliers="all", var_type="ratio")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title,
var_type, calc_diff=FALSE,
to_remove=NULL, outliers) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_reg <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
table(df[, "community"],
df[, "col_reg"])),
var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_reg"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
print(community_data)
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear",
which_outliers = outliers,
vals_remove=to_remove)
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients,
row.names = c("Intercept", ind))
print(details)
print(confint(lm, level=0.95))
cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
# What was the gender breakdown of survey respondents, pre and post?
compare_pre_post(var_name="gender", var_type="non_cont",
subplot_type="pie", title="Gender Breakdown")
# What was the gender breakdown of survey respondents, pre and post?
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="gender", var_type="non_cont",
subplot_type="pie", title="Gender Breakdown")
# What was the gender breakdown of survey respondents, pre and post?
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="gender", var_type="non_cont",
lgd_title ="Reasons",
subplot_type="pie", title="Gender Breakdown")
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
# Running the paired t-test
paired_testing <- function(data, var_name, test_type,
plot_diff=FALSE, plot_title=NULL,
remove_outliers=FALSE) {
pre_name <- paste(var_name, "pre", sep="_")
post_name <- paste(var_name, "post", sep="_")
sprintf("Removing outliers for both %s and %s", pre_name, post_name)
vars <- c(pre_name, post_name)
if(remove_outliers==TRUE) {
for(var in vars){
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}
var_pre <- data[, pre_name]
var_post <- data[, post_name]
diff <- var_post - var_pre
# Running the test
if(test_type == "wilcoxon"){
#Wilcoxon Signed-Rank Test
test <- wilcox.test(var_pre, var_post, paired=TRUE)
}else if(test_type == "sign") {
#Sign Test
test <- signtest(diff, m=0, conf.level=0.95, exact=FALSE)
} else if (test_type == "ttest") {
#Paired t-Test
test <- t.test(var_pre, var_post,
paired = TRUE, alternative = "two.sided")
} else if(test_type == "mcnemar") {
cross_tab <- table(var_pre, var_post)
print(cross_tab)
test <- mcnemar.test(cross_tab)
}
# Visualize distribution of score differences
if(plot_diff == TRUE) {
hist(diff, main=plot_title)
}
return(test)
}
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title,
var_type, calc_diff=FALSE,
to_remove=NULL, outliers) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_reg <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
table(df[, "community"],
df[, "col_reg"])),
var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_reg"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
print(community_data)
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear",
which_outliers = outliers,
vals_remove=to_remove)
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients,
row.names = c("Intercept", ind))
print(details)
print(confint(lm, level=0.95))
pearson_test <- cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title,
var_type, calc_diff=FALSE,
to_remove=NULL, outliers) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_reg <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
table(df[, "community"],
df[, "col_reg"])),
var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_reg"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
print(community_data)
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear",
which_outliers = outliers,
vals_remove=to_remove)
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients,
row.names = c("Intercept", ind))
print(details)
print(confint(lm, level=0.95))
pearson_test <- cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
print(pearson_test)
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title,
var_type, calc_diff=FALSE,
to_remove=NULL, outliers) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_reg <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
table(df[, "community"],
df[, "col_reg"])),
var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_reg"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
print(community_data)
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear",
which_outliers = outliers,
vals_remove=to_remove)
lst <- append(lst, list(p))
# lm <- lm(community_data[,dep] ~ community_data[,ind])
# details <- summary(lm)
# result <- as.data.frame(details$coefficients,
#                         row.names = c("Intercept", ind))
# print(details)
# print(confint(lm, level=0.95))
pearson_test <- cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
print(pearson_test)
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
# Check for decrease
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="-1",
var_type="categorical",
title="Counts of Decrease in Girls' School Enrollment by Community")
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="boys_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Boys' School Enrollment by Community")
# Check for decrease
community_reg(df=post_enc, outliers = "feature",
col_name="boys_schooling_change", dep="-1",
var_type="categorical",
title="Counts of Increase in Boys' School Enrollment by Community")
# How long does the water collection process take on a daily basis?
paired_testing(paired_enc, var_name="water_collection_time",
test_type = "wilcoxon", plot_diff=TRUE,
plot_title="Difference Pre-Post of Water Collection Times")
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="water_collection_time", dep="V1",
var_type="ratio", calc_diff = TRUE,
title="Cumulative Difference in
Water COllection Difference by Community")
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "water_collection_time", calc_diff=TRUE,
title="Individual Difference in
Water COllection Difference by Community")
consumption_reg <- function(df, dep, title, reg_type,
calc_diff=FALSE, exclude_outliers = FALSE,
to_remove=NULL) {
if(reg_type == "linear") {
if (calc_diff == TRUE) {
pre_name <- paste(dep, "pre", sep="_")
post_name <- paste(dep, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
} else {
df$col_reg <- df[, dep]
}
model <- lm(df$col_reg ~ df$Energy.Consumption)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent="col_reg", reg_type="linear",
remove_outliers=exclude_outliers,
vals_remove=to_remove)
pearson_test <- cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
print(pearson_test)
} else if(reg_type == "logistic") {
model <- glm(df[,dep] ~ df$Energy.Consumption,
family=binomial)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic",
remove_outliers=exclude_outliers,
vals_remove=to_remove)
test <- wald.test(Sigma = vcov(model),
b = coef(model), Terms = 1)
print(test)
}
return(p)
}
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "water_collection_time", calc_diff=TRUE,
title="Individual Difference in
Water COllection Difference by Community")
consumption_reg <- function(df, dep, title, reg_type,
calc_diff=FALSE, exclude_outliers = FALSE,
to_remove=NULL) {
if(reg_type == "linear") {
if (calc_diff == TRUE) {
pre_name <- paste(dep, "pre", sep="_")
post_name <- paste(dep, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
} else {
df$col_reg <- df[, dep]
}
model <- lm(df$col_reg ~ df$Energy.Consumption)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent="col_reg", reg_type="linear",
remove_outliers=exclude_outliers,
vals_remove=to_remove)
pearson_test <- cor.test(df$col_reg,
df$Energy.Consumption,
method="pearson")
print(pearson_test)
} else if(reg_type == "logistic") {
model <- glm(df[,dep] ~ df$Energy.Consumption,
family=binomial)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic",
remove_outliers=exclude_outliers,
vals_remove=to_remove)
test <- wald.test(Sigma = vcov(model),
b = coef(model), Terms = 1)
print(test)
}
return(p)
}
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "water_collection_time", calc_diff=TRUE,
title="Individual Difference in
Water COllection Difference by Community")
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="cooking_fuel_collection_time", dep="V1",
var_type="ratio", calc_diff = TRUE,
title="Cumulative Difference in
Cooking Fuel Collection Time Difference by Community")
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "cooking_fuel_collection_time", calc_diff=TRUE,
title="Individual Difference in
Cooking Fuel Collection Time Difference by Community")
# Are any household members business owners? Isolate for those with 'adult_'female
paired_testing(paired_enc, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Nigeria
ctr <- 1
country_paired <- paired_enc %>% filter(country_post == ctr)
paired_testing(country_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="business_owners_female", dep="1",
var_type="categorical", calc_diff = TRUE,
title="Difference in New Female Business Owners by Community")
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "business_owners_female", calc_diff=TRUE,
title="Difference in New Female Business Owners by Community")
# Regression - Pre-Post Differences
consumption_reg(df = ci_enc, reg_type ="linear",
dep= "workforce_change_female",
title="New Female Workers Change by Community")
# Regression - Pre-Post Differences
consumption_reg(df = ci_enc, reg_type ="linear",
dep= "workforce_change_female", exclude_outliers = TRUE,
title="New Female Workers Change by Community")
consumption_reg <- function(df, dep, title, reg_type,
calc_diff=FALSE, outliers=NULL,
exclude_outliers = FALSE,
to_remove=NULL) {
if(reg_type == "linear") {
if (calc_diff == TRUE) {
pre_name <- paste(dep, "pre", sep="_")
post_name <- paste(dep, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
} else {
df$col_reg <- df[, dep]
}
model <- lm(df$col_reg ~ df$Energy.Consumption)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent="col_reg", reg_type="linear",
remove_outliers=exclude_outliers,
which_outliers = outliers,
vals_remove=to_remove)
pearson_test <- cor.test(df$col_reg,
df$Energy.Consumption,
method="pearson")
print(pearson_test)
} else if(reg_type == "logistic") {
model <- glm(df[,dep] ~ df$Energy.Consumption,
family=binomial)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic",
remove_outliers=exclude_outliers,
which_outliers = outliers,
vals_remove=to_remove)
test <- wald.test(Sigma = vcov(model),
b = coef(model), Terms = 1)
print(test)
}
return(p)
}
# Regression - Pre-Post Differences
consumption_reg(df = ci_enc, reg_type ="linear",
dep= "workforce_change_female",
exclude_outliers = TRUE, outliers = "feature",
title="New Female Workers Change by Community")
# Regression - Pre-Post Differences
df_reg <- ci_enc %>% filter(workforce_change_female == 0)
consumption_reg(df = df_reg, reg_type ="linear",
dep= "workforce_change_female",
exclude_outliers = TRUE, outliers = "feature",
title="New Female Workers Change by Community")
# Regression - Pre-Post Differences
df_reg <- ci_enc %>% filter(workforce_change_female != 0)
consumption_reg(df = df_reg, reg_type ="linear",
dep= "workforce_change_female",
exclude_outliers = TRUE, outliers = "feature",
title="New Female Workers Change by Community")
# What is your primary power source?
compare_pre_post(df_pre=initial_pre, df_post=post_clean, lgd_title ="Types",
var_name="power_sources_primary", var_type="non_cont",
subplot_type="bar", title="Power Source")
# What is your primary power source?
compare_pre_post(df_pre=initial_pre, df_post=post_clean, lgd_title ="Types",
var_name="power_sources_primary", var_type="non_cont",
subplot_type="bar_simple", title="Power Source")
