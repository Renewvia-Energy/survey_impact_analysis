filter(tariff == "Residential")
# Pre-connection
initial_pre_enc <- initial_enc %>%
filter(status == 1)
# Pre-connection
initial_post_enc <- initial_enc %>%
filter(status == 2)
# head(initial_enc)
# head(initial_pre_enc)
# head(initial_post_enc)
# Household Post-Survey
post <- read.csv("data_cleaning/datasets_encoded/post_encoded.csv",
na.strings=c("","NA"))
post_enc <- merge(post, temp,
by.x = 'renewvia_id',
by.y = 'Account.Number')  %>%
filter(tariff == "Residential")
# Post-Connection
# post_clean_enc <- post_enc
# head(post_enc)
# head(post_clean_enc)
# Commercial & Insitution Post-Survey
ci <- read.csv("data_cleaning/datasets_encoded/ci_post_encoded.csv",
na.strings=c("","NA"))
ci_enc <- merge(ci, temp,
by.x = 'renewvia_id',
by.y = 'Account.Number')
# head(ci_enc)
plot_func(df=ci_clean, var_name="health_offering_change_count",
var_type="non_cont", plot_title="Change in Health Services Offered by Clinics",
plot_type="bar_discrete", chars_remove=NULL)
plot_func(df=ci_clean, var_name="health_offering_change_count",
var_type="non_cont", plot_title="Change in Health Services Offered by Clinics",
plot_type="pie", chars_remove=c(0))
## For clinics or health services only: Since connection to Renewvia mini-grid, have your health service offerings changed in any of the following ways: (select all that apply).
community_reg(df=ci_enc,
col_name="health_offering_change_count", dep="V1",
title="New Health Services Offered by Community",
var_type="ratio")
## Do you feel that you have better access to health services because of connection to mini-grid?
plot_func(df=ci_clean, var_name="better_access_health_minigrid",
var_type="non_cont", plot_title="Households - Better Access to Healthcare",
plot_type="pie")
## Do you feel that you have better access to health services because of connection to mini-grid?
plot_func(df=post_clean, var_name="better_access_health_minigrid",
var_type="non_cont", plot_title="Households - Better Access to Healthcare",
plot_type="pie")
community_reg(df=post_enc,
col_name="better_access_health_minigrid", dep="1", var_type="categorical",
title="Scatterplots For Better Healthcare Access by Community")
ind_reg <- function(data, feat, col_name, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, col_name] ~ df[,feat],
family=binomial)
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=rep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(feat = "Energy.Consumption",
col_name= "better_access_health_minigrid",
title="Logistic Regression")
ind_reg <- function(data, feat, col_name, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, col_name] ~ df[,feat],
family=binomial)
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=rep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(data = post_enc,
feat = "Energy.Consumption",
col_name= "better_access_health_minigrid",
title="Logistic Regression")
ind_reg <- function(df, feat, dep, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, dep] ~ df[,feat],
family=binomial)
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=dep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(df = post_enc,
feat = "Energy.Consumption",
col_name= "better_access_health_minigrid",
title="Logistic Regression")
ind_reg <- function(df, feat, dep, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, dep] ~ df[,feat],
family=binomial)
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=dep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(df = post_enc,
feat = "Energy.Consumption",
dep= "better_access_health_minigrid",
title="Logistic Regression")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title, var_type, calc_diff=FALSE) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_diff <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_diff <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
prop.table(table(
df[, "community"],
df[, "col_diff"]),
margin = 1)
)
, var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_diff"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear")
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients, row.names = c("Intercept", ind))
print(result)
print(confint(lm, level=0.95))
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
plot_reg <- function(data, feature, dependent, remove_outliers=TRUE, reg_type) {
if(remove_outliers == TRUE) {
vars <- c(feature, dependent)
for(var in vars){
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}
if(reg_type == "linear") {
plot <- ggplot(data,
aes(.data[[feature]], .data[[dependent]])) +
geom_point(color='blue') +
geom_smooth(color='red', method = "lm", se = FALSE) +
theme_classic()
} else if(reg_type == "logistic") {
plot <- ggplot(data,
aes(.data[[feature]], .data[[dependent]])) +
geom_point(color='blue') +
stat_smooth(method="glm", color="red", se=FALSE,
method.args = list(family=binomial)) +
theme_classic()
}
return(plot)
}
ind_reg <- function(df, feat, dep, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, dep] ~ df[,feat],
family=binomial)
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=dep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(df = post_enc,
feat = "Energy.Consumption",
dep= "better_access_health_minigrid",
title="Logistic Regression")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title, var_type, calc_diff=FALSE) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_diff <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_diff <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
prop.table(table(
df[, "community"],
df[, "col_diff"]),
margin = 1)
)
, var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_diff"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear")
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients, row.names = c("Intercept", ind))
print(result)
print(confint(lm, level=0.95))
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
plot_reg <- function(data, feature, dependent, remove_outliers=TRUE, reg_type) {
if(remove_outliers == TRUE) {
vars <- c(feature, dependent)
for(var in vars){
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}
if(reg_type == "linear") {
plot <- ggplot(data,
aes(.data[[feature]], .data[[dependent]])) +
geom_point(color='blue') +
geom_smooth(color='red', method = "lm", se = FALSE) +
theme_classic()
} else if(reg_type == "logistic") {
plot <- ggplot(data,
aes(.data[[feature]], .data[[dependent]])) +
geom_point(color='blue') +
geom_smooth(method="glm", color="red", se=FALSE,
method.args = list(family=binomial)) +
theme_classic()
}
return(plot)
}
ind_reg <- function(df, feat, dep, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, dep] ~ df[,feat],
family=binomial)
print(summary(logit))
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature=feat,
dependent=dep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(df = post_enc,
feat = "Energy.Consumption",
dep= "better_access_health_minigrid",
title="Logistic Regression")
ind_reg <- function(df, dep, title) {
# df <- data[, c(feat, col_name)]
#   df$pos_response <- ifelse(df[, col_name] > 0, 1, 0)
#   df$neg_response <- ifelse(df[, col_name] < 0, 1, 0)
#   responses <- c("pos_response", "neg_response")
#
#   lst <- list()
# for(rep in responses){
logit <- glm(df[, dep] ~ df$Energy.Consumption,
family=binomial)
print(summary(logit))
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic")
p
#   lst <- append(lst, list(p))
# }
#
# plot <- ggarrange(plotlist = lst,
#                   ncol = 2, nrow = 2,
#                   common.legend = TRUE,
#                   legend="right")
# annotate_figure(plot, top = text_grob(title,
#                color = "black", face = "bold", size = 12))
}
ind_reg(df = post_enc,
dep= "better_access_health_minigrid",
title="Logistic Regression")
ind_reg <- function(df, dep, title) {
logit <- glm(df[, dep] ~ df$Energy.Consumption,
family=binomial)
print(summary(logit))
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic")
return(p)
}
ind_reg(df = post_enc,
dep= "better_access_health_minigrid",
title="Logistic Regression")
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title, var_type, calc_diff=FALSE) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_diff <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_diff <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
prop.table(table(
df[, "community"],
df[, "col_diff"]),
margin = 1)
)
, var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_diff"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear")
lst <- append(lst, list(p))
lm <- lm(community_data[,dep] ~ community_data[,ind])
details <- summary(lm)
result <- as.data.frame(details$coefficients, row.names = c("Intercept", ind))
print(result)
print(confint(lm, level=0.95))
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
plot_reg <- function(data, feature, dependent, remove_outliers=TRUE, reg_type) {
if(remove_outliers == TRUE) {
vars <- c(feature, dependent)
for(var in vars){
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}
if(reg_type == "linear") {
plot <- ggplot(data,
aes(x=.data[[feature]], y=.data[[dependent]])) +
geom_point(color='blue') +
geom_smooth(color='red', method = "lm", se = FALSE) +
theme_classic()
} else if(reg_type == "logistic") {
plot <- ggplot(data,
aes(x=.data[[feature]], y=.data[[dependent]])) +
geom_point(color='blue', alpha=.5) +
stat_smooth(method="glm", color="red", se=FALSE,
method.args = list(family=binomial)) +
theme_classic()
}
return(plot)
}
ind_reg <- function(df, dep, title) {
logit <- glm(df[, dep] ~ df$Energy.Consumption,
family=binomial)
print(summary(logit))
test <- wald.test(Sigma = vcov(logit), b = coef(logit), Terms = 1)
print(test)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic", remove_outliers = FALSE)
return(p)
}
ind_reg(df = post_enc,
dep= "better_access_health_minigrid",
title="Logistic Regression")
# Do you feel that having access to minigrid power has made you more safe? Please explain
# Do you feel that having access to minigrid power has made you more safe? Please explain->
# Do you feel that you have better access to health services because of connection to minigrid?
# What makes you feel the most unsafe?
# How safe do you feel outside your home when it is dark?
compare_pre_post(var_name="feel_safe_dark", var_type="non_cont",
subplot_type="bar", title="Feeling Safe When Dark")
# Do you feel that having access to minigrid power has made you more safe? Please explain
# Do you feel that having access to minigrid power has made you more safe? Please explain->
# Do you feel that you have better access to health services because of connection to minigrid?
# What makes you feel the most unsafe?
# How safe do you feel outside your home when it is dark?
compare_pre_post(var_name="feel_safe_dark", var_type="non_cont",
subplot_type="pie", title="Feeling Safe When Dark")
