# unique(paired_clean$cooking_fuel_responsible_post)
# Unpaired
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="cooking_fuel_responsible_binary",
var_type="non_cont",
subplot_type="pie",
lgd_title="Are men involved?",
title="Unpaired: Shcool-Aged Person responsible
for Cooking Fuel Collection")
# Paired
compare_paired(data=paired_clean,
var_name="cooking_fuel_responsible_binary",
lgd_title="Are men involved?",
plot_title="Paired: Shcool-Aged Person responsible
for Cooking Fuel Collection")
# How many new women-led businesses were created?
# Unpaired
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="business_owners_female",
var_type="non_cont",
lgd_title = "Is there a woman business owner?",
subplot_type="pie",
title="Unpaired - Women Business Owners")
# Paired
compare_paired(data=paired_clean,
var_name="business_owners_female",
lgd_title="Is there a woman business owner?",
plot_title="Paired: Women Business Owners")
ctr <- "nigeria"
country_pre <- initial_pre %>% filter(country == ctr)
country_post <- post_clean %>% filter(country == ctr)
compare_pre_post(df_pre=country_pre, df_post=country_post,
var_name="business_owners_female",
var_type="non_cont",
lgd_title = "Is there a woman business owner?",
subplot_type="pie",
title="Nigeria Unpaired: Women Business Owners")
# Paired
country_paired <- paired_clean %>% filter(country_post == ctr)
compare_paired(data=country_paired,
var_name="business_owners_female",
lgd_title="Is there a woman business owner?",
plot_title="Nigeria Paired: Women Business Owners")
ctr <- "kenya"
country_pre <- initial_pre %>% filter(country == ctr)
country_post <- post_clean %>% filter(country == ctr)
compare_pre_post(df_pre=country_pre, df_post=country_post,
var_name="business_owners_female",
var_type="non_cont",
lgd_title = "Is there a woman business owner?",
subplot_type="pie",
title="Kenya Unpaired: Women Business Owners")
# Paired
country_paired <- paired_clean %>% filter(country_post == ctr)
compare_paired(data=country_paired,
var_name="business_owners_female",
lgd_title="Is there a woman business owner?",
plot_title="Kenya Paired: Women Business Owners")
gdr <- "male"
gender_pre <- initial_pre %>% filter(gender == gdr)
gender_post <- post_clean %>% filter(gender == gdr)
compare_pre_post(df_pre=gender_pre, df_post=gender_post,
var_name="business_owners_female",
var_type="non_cont",
lgd_title = "Is there a woman business owner?",
subplot_type="pie",
title="Men Unpaired: Women Business Owners")
# Paired
gender_paired <- paired_clean %>% filter(gender_post == gdr)
compare_paired(data=gender_paired,
var_name="business_owners_female",
lgd_title="Is there a woman business owner?",
plot_title="Men Paired: Women Business Owners")
gdr <- "female"
gender_pre <- initial_pre %>% filter(gender == gdr)
gender_post <- post_clean %>% filter(gender == gdr)
compare_pre_post(df_pre=gender_pre, df_post=gender_post,
var_name="business_owners_female",
var_type="non_cont",
lgd_title = "Is there a woman business owner?",
subplot_type="pie",
title="Women Unpaired: Women Business Owners")
# Paired
gender_paired <- paired_clean %>% filter(gender_post == gdr)
compare_paired(data=gender_paired,
var_name="business_owners_female",
lgd_title="Is there a woman business owner?",
plot_title="Women Paired: Women Business Owners")
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Girls' School Enrollment by Community")
# Check for decrease
community_reg(df=post_enc, outliers = "feature",
col_name="girls_schooling_change", dep="-1",
var_type="categorical",
title="Counts of Decrease in Girls' School Enrollment by Community")
# Check for increase
community_reg(df=post_enc, outliers = "feature",
col_name="boys_schooling_change", dep="1",
var_type="categorical",
title="Counts of Increase in Boys' School Enrollment by Community")
# Check for decrease
community_reg(df=post_enc, outliers = "feature",
col_name="boys_schooling_change", dep="-1",
var_type="categorical",
title="Counts of Increase in Boys' School Enrollment by Community")
# How long does the water collection process take on a daily basis?
paired_testing(paired_enc, var_name="water_collection_time",
test_type = "wilcoxon", plot_diff=TRUE,
plot_title="Difference Pre-Post of Water Collection Times")
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="water_collection_time", dep="V1",
var_type="ratio", calc_diff = TRUE,
title="Cumulative Difference in
Water COllection Difference by Community")
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "water_collection_time", calc_diff=TRUE,
title="Individual Difference in
Water COllection Difference by Community")
# How long does the cooking fuel collection process take on a daily basis?
paired_testing(paired_enc, var_name="cooking_fuel_collection_time",
test_type = "wilcoxon", plot_diff=TRUE,
plot_title="Difference Pre-Post of Water Collection Times")
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="cooking_fuel_collection_time", dep="V1",
var_type="ratio", calc_diff = TRUE,
title="Cumulative Difference in
Cooking Fuel Collection Time Difference by Community")
# Regression - Pre-Post Differences
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "cooking_fuel_collection_time", calc_diff=TRUE,
title="Individual Difference in
Cooking Fuel Collection Time Difference by Community")
# Are any household members business owners? Isolate for those with 'adult_'female
paired_testing(paired_enc, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Regression - Pre-Post Differences
community_reg(df=paired_enc, outliers = "feature",
col_name="business_owners_female", dep="1",
var_type="categorical", calc_diff = TRUE,
title="Difference in New Female Business Owners by Community")
# Nigeria
ctr <- 1
country_paired <- paired_enc %>% filter(country_post == ctr)
paired_testing(country_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Kenya
ctr <- 2
country_paired <- paired_enc %>% filter(country_post == ctr)
paired_testing(country_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Women
gdr <- 1
gender_paired <- paired_enc %>% filter(gender_post == gdr)
paired_testing(gender_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# Men
gdr <- 2
gender_paired <- paired_enc %>% filter(gender_post == gdr)
paired_testing(gender_paired, var_name="business_owners_female",
test_type = "mcnemar", plot_diff=FALSE)
# If you answered yes to adding new workers, how many new employees are female?
# Check for increase
community_reg(df=ci_enc,
col_name="workforce_change_female", dep="V1",
title="New Female Workers Change by Community",
outliers="all", var_type="ratio")
# Regression - Pre-Post Differences
df_reg <- ci_enc %>% filter(workforce_change_female != 0)
consumption_reg(df = df_reg, reg_type ="linear",
dep= "workforce_change_female",
exclude_outliers = TRUE, outliers = "feature",
title="New Female Workers Change by Community")
# What is your primary power source?
compare_pre_post(df_pre=initial_pre, df_post=post_clean, lgd_title ="Types",
var_name="power_sources_primary", var_type="non_cont",
subplot_type="bar_simple", title="Power Source")
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="light_hours_current", var_type="non_cont",
subplot_type="bar_discrete", title="Light Hours",
char_remove=c(46))
# How many electronic devices or appliances do you currently use in the household
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="appliances_count", var_type="non_cont",
subplot_type="bar_discrete", title="Appliances",
char_remove=NULL)
# Has the number of electronic devices or appliances increased since connection to minigrid?
plot_func(df=post_clean, var_name="appliances_count_change",
var_type="non_cont", lgd = "Change",
plot_title="Change in No. of Appliances",
plot_type="pie", char_remove=NULL)
# How far must you travel to charge your mobile phone?
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="phone_charge_travel_distance", var_type="non_cont",
subplot_type="bar_simple", lgd_title = "Distances",
title="Unpaired: Travel Distance to Charge Phone",
char_remove=NULL)
# Paired
compare_paired(data=paired_clean,
var_name="phone_charge_travel_distance",
lgd_title="Time Intervals",
plot_title="Paired: Travel Distance to Charge Phone")
# How far must you travel to obtain your water supply?
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="water_collection_travel_distance", var_type="non_cont",
subplot_type="bar", lgd_title = "Distances",
title="Travel Distance for Water Collection",
char_remove=NULL)
# Paired
compare_paired(data=paired_clean,
var_name="water_collection_travel_distance",
lgd_title="Time Intervals",
plot_title="Paired: Travel Distance for Water Collection")
# Unpaired
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="water_collection_time",
var_type="non_cont",
subplot_type="bar_simple",
lgd_title="Time Intervals",
title="Unpaired: Water Collection Time")
# Paired
compare_paired(data=paired_clean,
var_name="water_collection_time",
lgd_title="Time Intervals",
plot_title="Paired: Water Collection Time")
# Unpaired
compare_pre_post(df_pre=initial_pre, df_post=post_clean,
var_name="cooking_fuel_collection_time",
var_type="non_cont",
subplot_type="bar_simple",
lgd_title="Time Intervals",
title="Unpaired: Cooking Fuel Collection Time")
# Paired
compare_paired(data=paired_clean,
var_name="cooking_fuel_collection_time",
lgd_title="Time Intervals",
plot_title="Paired: Cooking Fuel Collection Time")
# Is this business, clinic, school still in operation?
plot_func(df=ci_clean, var_name="operation_status",
var_type="non_cont", lgd = "Status",
plot_title="C&I - Type",
plot_type="pie")
# Please select your business type
plot_func(df=ci_clean, var_name="business_type",
var_type="non_cont", lgd = "Business Type",
plot_title="C&I - Type",
plot_type="bar_simple")
# Since connection to Renewvia minigrid, have your hours of operation changed at all?
plot_func(df=ci_clean, var_name="operations_hours_change",
var_type="non_cont", lgd="Change",
plot_title="Change in C&I Business Hours",
plot_type="pie")
# Since connection to Renewvia mingrid, have you had any change in number of workers/employees at your place of work?
plot_func(df=ci_clean, var_name="workforce_change",
var_type="non_cont", plot_title="Change in C&I Workforce",
plot_type="pie", char_remove=NULL)
# Since connection to Renewvia mingrid, have you had any change in number of workers/employees at your place of work?
plot_func(df=ci_clean, var_name="workforce_change",
var_type="non_cont", lgd="Change",
plot_title="Change in C&I Workforce",
plot_type="pie", char_remove=NULL)
# Have you added any new products or services since connection to Renewvia minigrid?
plot_func(df=ci_clean, var_name="ci_offering_change",
var_type="non_cont", plot_title="Change in C&I Products/Services",
plot_type="pie", char_remove=NULL)
# Have you added any new products or services since connection to Renewvia minigrid?
plot_func(df=ci_clean, var_name="ci_offering_change",
var_type="non_cont", lgd="Change",
plot_title="Change in C&I Products/Services",
plot_type="pie", char_remove=NULL)
paired_testing(paired_enc, var_name = "appliances_count",
plot_diff = TRUE,
plot_title = "Difference Pre-Post in No. of Appliances",
test_type="ttest", remove_outliers=TRUE)
community_reg(df=paired_enc, calc_diff = TRUE,
col_name="appliances_count", dep="V1",
title="Difference in No. of Appliances by Community",
var_type="ratio", outliers = "dependent")
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "appliances_count", calc_diff=TRUE,
title="Energy Consumption vs. Difference in No. of Appliances",
outliers = "dependent")
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "appliances_count", calc_diff=TRUE,
title="Energy Consumption vs. Difference in No. of Appliances",
outliers = "feature")
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "appliances_count", calc_diff=TRUE,
title="Energy Consumption vs. Difference in No. of Appliances",
outliers = "all")
consumption_reg(df = paired_enc, reg_type ="linear",
dep= "appliances_count", calc_diff=TRUE,
title="Energy Consumption vs. Difference in No. of Appliances",
outliers = "dependent")
plot_func(df=ci_clean, var_name="business_hours_increase",
var_type="non_cont", lgd="By how much?",
plot_title="C&I Added Operation Hours",
plot_type="pie")
## Since connection to Renewvia mini-grid, have your hours of operation changed at all?
# Check for increase
community_reg(df=ci_enc,
col_name="operations_hours_change", dep="1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
## Since connection to Renewvia mini-grid, have your hours of operation changed at all?
# Check for increase
community_reg(df=ci_enc, outliers = NULL,
col_name="operations_hours_change", dep="1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
## Since connection to Renewvia mini-grid, have your hours of operation changed at all?
# Check for increase
community_reg(df=ci_enc, outliers = "feature",
col_name="operations_hours_change", dep="1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
plot_func(df=post_clean, var_name="school_performance_change",
var_type="non_cont", lgd = "Change",
plot_title="Household - Academic Performance",
plot_type="pie")
plot_func(df=ci_clean, var_name="school_performance",
var_type="non_cont", lgd = "Change",
plot_title="Schools - Academic Performance",
plot_type="pie")
## Have you seen a change in overall school performance?
community_reg(df=ci_enc, outliers = "feature",
col_name="school_performance", dep="1", var_type="categorical",
title="Schools - Increase in Academic Performace by Community")
community_reg(df=post_enc, outliers = "feature",
col_name="school_performance_change",
dep="1", var_type="categorical",
title="Households - Increase in Academic Performace by Community")
community_reg(df=post_enc, outliers = "feature",
col_name="school_performance",
dep="1", var_type="categorical",
title="Households - Increase in Academic Performace by Community")
community_reg(df=post_enc, outliers = "feature",
col_name="school_performance_change",
dep="1", var_type="categorical",
title="Households - Increase in Academic Performace by Community")
# Check for decrease
community_reg(df=ci_enc, outliers = "feature",
col_name="operations_hours_change", dep="-1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
# Check for decrease
community_reg(df=ci_enc, outliers = "dependent",
col_name="operations_hours_change", dep="-1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
# Check for decrease
community_reg(df=ci_enc, outliers = NULL,
col_name="operations_hours_change",
dep="-1", var_type="categorical",
title="Scatterplots For Increase in Business Hours by Community")
plot_reg <- function(data, feature, dependent,
remove_outliers=TRUE, which_outliers,
reg_type, vals_remove=NULL) {
if(is.null(vals_remove) == FALSE) {
data <- data[!grepl(vals_remove,data$dependent),]
}
if(remove_outliers == TRUE) {
if(which_outliers=="all") {
vars <- c(feature, dependent)
for(var in vars){
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}else if(which_outliers=="dependent"){
var <- dependent
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}else if(which_outliers=="feature"){
var <- feature
quartiles <- quantile(data[, var],
probs=c(.25, .75), na.rm = TRUE)
IQR <- IQR(data[, var], na.rm = TRUE)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data <- subset(data,
data[, var] > Lower &
data[, var] < Upper)
}
}
if(reg_type == "linear") {
plot <- ggplot(data,
aes(x=.data[[feature]], y=.data[[dependent]])) +
geom_point(color='blue') +
geom_smooth(color='red', method = "lm", se = FALSE) +
theme_classic()
} else if(reg_type == "logistic") {
plot <- ggplot(data,
aes(x=.data[[feature]], y=.data[[dependent]])) +
geom_point(color='blue', alpha=.5) +
stat_smooth(method="glm", color="red", se=FALSE,
method.args = list(family=binomial)) +
theme_classic()
}
return(plot)
}
ind_vars <- c("pv_size_kwh", "customer_count", "capex_usd", "consumption")
community_reg <- function(df, col_name, dep, title,
var_type, calc_diff=FALSE,
to_remove=NULL, outliers) {
if (calc_diff == TRUE) {
pre_name <- paste(col_name, "pre", sep="_")
post_name <- paste(col_name, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
names(df)[names(df) == "community_post"] <- "community"
} else {
df$col_reg <- df[, col_name]
}
if(var_type == "categorical") {
data <- rownames_to_column(as.data.frame.matrix(
table(df[, "community"],
df[, "col_reg"])),
var = "community")
} else if(var_type == "ratio") {
data <- as.data.frame(rowsum(df[, "col_reg"],
df[, "community"], na.rm = TRUE))
data$community <- rownames(data)
}
community_data <- merge(x=projects, y=data, by="community")
print(community_data)
lst <- list()
for(ind in ind_vars) {
print(ind)
p <- plot_reg(data=community_data, feature=ind,
dependent=dep, reg_type="linear",
which_outliers = outliers,
vals_remove=to_remove)
lst <- append(lst, list(p))
# lm <- lm(community_data[,dep] ~ community_data[,ind])
# details <- summary(lm)
# result <- as.data.frame(details$coefficients,
#                         row.names = c("Intercept", ind))
# print(details)
# print(confint(lm, level=0.95))
pearson_test <- cor.test(community_data[,dep],
community_data[,ind],
method="pearson")
print(pearson_test)
}
plot <- ggarrange(plotlist = lst,
ncol = 2, nrow = 2,
common.legend = TRUE,
legend="right")
annotate_figure(plot, top = text_grob(title,
color = "black", face = "bold", size = 12))
}
consumption_reg <- function(df, dep, title, reg_type,
calc_diff=FALSE, outliers=NULL,
exclude_outliers = FALSE,
to_remove=NULL) {
if(reg_type == "linear") {
if (calc_diff == TRUE) {
pre_name <- paste(dep, "pre", sep="_")
post_name <- paste(dep, "post", sep="_")
df$col_reg <- df[, post_name] - df[, pre_name]
} else {
df$col_reg <- df[, dep]
}
model <- lm(df$col_reg ~ df$Energy.Consumption)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent="col_reg", reg_type="linear",
remove_outliers=exclude_outliers,
which_outliers = outliers,
vals_remove=to_remove)
pearson_test <- cor.test(df$col_reg,
df$Energy.Consumption,
method="pearson")
print(pearson_test)
} else if(reg_type == "logistic") {
model <- glm(df[,dep] ~ df$Energy.Consumption,
family=binomial)
p <- plot_reg(data=df, feature="Energy.Consumption",
dependent=dep, reg_type="logistic",
remove_outliers=exclude_outliers,
which_outliers = outliers,
vals_remove=to_remove)
test <- wald.test(Sigma = vcov(model),
b = coef(model), Terms = 1)
print(test)
}
return(p)
}
## Have you seen a change in overall school performance?
community_reg(df=ci_enc, outliers = "feature",
col_name="school_performance", dep="-1", var_type="categorical",
title="Schools - Increase in Academic Performace by Community")
# To fix, exclude outliers
df_pos <- ci_enc %>% filter(earnings_change != -1)
consumption_reg(df = df_pos, reg_type ="logistic",
dep= "earnings_change",  outliers = "feature",
title="Energy Consumption vs. C&I Earnings Increase")
# To fix, exclude outliers
df_pos <- ci_enc %>% filter(earnings_change != -1)
consumption_reg(df = df_pos, reg_type ="logistic",
dep= "earnings_change",  outliers = "dependent",
title="Energy Consumption vs. C&I Earnings Increase")
